<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ingress on 梁波的技术博客</title>
    <link>http://flyeric.top/tags/ingress/</link>
    <description>Recent content in ingress on 梁波的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 13 Jan 2021 00:00:00 +0800</lastBuildDate><atom:link href="http://flyeric.top/tags/ingress/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>不同ingress controller的性能测试</title>
      <link>http://flyeric.top/post/ingress-controllers-benchmark/</link>
      <pubDate>Wed, 13 Jan 2021 00:00:00 +0800</pubDate>
      
      <guid>http://flyeric.top/post/ingress-controllers-benchmark/</guid>
      <description>&lt;p&gt;Ingress Controller有很多实现方式，如Kubernetes官方，Nginx官方，Kong，Traefik等等，下面对以下三种不同的Ingress Controller进行性能测试，Kubernetes Ingress VS Nginx Ingress（Nginx官方出品）VS Traefix Ingress。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ingress-nginx 性能压测</title>
      <link>http://flyeric.top/post/ingress-nginx-benchmark/</link>
      <pubDate>Mon, 04 Jan 2021 00:00:00 +0800</pubDate>
      
      <guid>http://flyeric.top/post/ingress-nginx-benchmark/</guid>
      <description>&lt;p&gt;Ingress是目前Kubernetes集群流量接入的重要入口，了解其性能指标有助于用户选用合适的网络方案。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ingress-nginx 高并发实践</title>
      <link>http://flyeric.top/post/ingress-nginx-high-concurrency/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0800</pubDate>
      
      <guid>http://flyeric.top/post/ingress-nginx-high-concurrency/</guid>
      <description>&lt;p&gt;Nginx Ingress Controller 基于 Nginx 实现 Kubernetes Ingress API。Nginx 是一款高性能网关，在实际生产环境运行时，需要对参数进行调优，以保证其充分发挥高性能的优势。&lt;/p&gt;
&lt;p&gt;本文将介绍针对 Nginx Ingress 全局配置与内核参数调优的方法及其原理，让 Nginx Ingress 更好的适配高并发业务场景。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ingress-nginx在TKE上部署的最佳实践</title>
      <link>http://flyeric.top/post/ingress-nginx-on-tke/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0800</pubDate>
      
      <guid>http://flyeric.top/post/ingress-nginx-on-tke/</guid>
      <description>&lt;p&gt;Nginx Ingress 有多种部署方式，本文将介绍 Nginx Ingress 在 TKE 上的一些部署方案，这几种方案的原理、各自优缺点以及一些选型和使用上的建议。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ingress-nginx的安装使用</title>
      <link>http://flyeric.top/post/install-ingress-nginx/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0800</pubDate>
      
      <guid>http://flyeric.top/post/install-ingress-nginx/</guid>
      <description>&lt;p&gt;开源的 Ingress Controller 的实现使用量最大的莫过于 Ingress Nginx 了，可作为反向代理将外部流量导入集群内部，将 Kubernetes 内部的 Service 暴露给外部，在 Ingress 对象中通过域名匹配 Service，这样就可以直接通过域名访问到集群内部的服务了。&lt;/p&gt;
&lt;p&gt;实际 Ingress Nginx 有两种实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/ingress-nginx&#34;&gt;https://github.com/kubernetes/ingress-nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nginxinc/kubernetes-ingress&#34;&gt;https://github.com/nginxinc/kubernetes-ingress&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第一种是 Kubernetes 开源社区的实现，第二种是 Nginx 官方的实现，我们通常用的是 Kubernetes 社区的实现，这也是本文所关注的重点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubernetes Ingress 自动化 HTTPS</title>
      <link>http://flyeric.top/post/automatic-kubernetes-ingress-https-with-lets-encrypt/</link>
      <pubDate>Mon, 28 Sep 2020 00:00:00 +0800</pubDate>
      
      <guid>http://flyeric.top/post/automatic-kubernetes-ingress-https-with-lets-encrypt/</guid>
      <description>&lt;p&gt;现在的Web应用启用&lt;code&gt;HTTPS&lt;/code&gt;服务是真的非常有必要的。一些正规机构颁发的CA证书费用又特别高，就算有免费的工具颁发证书，通过人工的方式手动注入到K8S比较麻烦，而且还需要到期后进行人工续期，若管理的证书过多，还无法颁发泛域名的话，那就更加麻烦了。&lt;/p&gt;
&lt;p&gt;这里介绍一下免费的午餐 - &lt;code&gt;Let&#39;s Encrypt&lt;/code&gt;，虽然只有90天的证书有效期，但是我们完全可以在证书失效之前，重新生成证书替换掉。在Kubernetes集群中就更方便了，我们可以通过 Kubernetes Ingress 和 Let’s Encrypt 实现外部服务的自动化 HTTPS。&lt;/p&gt;
&lt;p&gt;Cert-Manager 是一个云原生证书管理开源项目，用于在 Kubernetes 集群中提供 HTTPS 证书并自动续期，支持 Let’s Encrypt / HashiCorp / Vault 这些免费证书的签发。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://pic-bed-1256249917.cos.ap-chengdu.myqcloud.com/uPic/cert-manager-structrue.png&#34; alt=&#34;cert-manager-structrue&#34;&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
